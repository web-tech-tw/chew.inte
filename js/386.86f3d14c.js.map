{"version":3,"file":"js/386.86f3d14c.js","mappings":"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","sources":["webpack://chew.inte/./node_modules/prismjs/components/prism-clike.js","webpack://chew.inte/./node_modules/prismjs/components/prism-core.js","webpack://chew.inte/./node_modules/prismjs/components/prism-javascript.js","webpack://chew.inte/../src/Editor.ts"],"sourcesContent":["Prism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n","/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","import Vue, { VNode } from 'vue';\n\nimport './styles.css';\nconst KEYCODE_ENTER = 13;\nconst KEYCODE_TAB = 9;\nconst KEYCODE_BACKSPACE = 8;\nconst KEYCODE_Y = 89;\nconst KEYCODE_Z = 90;\nconst KEYCODE_M = 77;\nconst KEYCODE_PARENS = 57;\nconst KEYCODE_BRACKETS = 219;\nconst KEYCODE_QUOTE = 222;\nconst KEYCODE_BACK_QUOTE = 192;\nconst KEYCODE_ESCAPE = 27;\n\nconst HISTORY_LIMIT = 100;\nconst HISTORY_TIME_GAP = 3000;\n\nconst isWindows = typeof window !== 'undefined' && navigator && /Win/i.test(navigator.platform);\nconst isMacLike = typeof window !== 'undefined' && navigator && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\nexport interface EditorProps {\n  lineNumbers: boolean;\n  autoStyleLineNumbers: boolean;\n  readonly: boolean;\n  value: string;\n  highlight: () => string;\n  tabSize: number;\n  insertSpaces: boolean;\n  ignoreTabKey: boolean;\n  placeholder: string;\n}\nexport interface Record {\n  value: string;\n  selectionStart: number;\n  selectionEnd: number;\n}\n\nexport interface History {\n  stack: Array<Record & { timestamp: number }>;\n  offset: number;\n}\n\nexport const PrismEditor = Vue.extend({\n  props: {\n    lineNumbers: {\n      type: Boolean,\n      default: false,\n    },\n    autoStyleLineNumbers: {\n      type: Boolean,\n      default: true,\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    value: {\n      type: String,\n      default: '',\n    },\n    highlight: {\n      type: Function,\n      required: true,\n    },\n    tabSize: {\n      type: Number,\n      default: 2,\n    },\n    insertSpaces: {\n      type: Boolean,\n      default: true,\n    },\n    ignoreTabKey: {\n      type: Boolean,\n      default: false,\n    },\n    placeholder: {\n      type: String,\n      default: '',\n    },\n  },\n  data() {\n    return {\n      capture: true,\n      history: {\n        stack: [],\n        offset: -1,\n      } as History,\n      lineNumbersHeight: '20px',\n      codeData: '',\n    };\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler(newVal: string): void {\n        if (!newVal) {\n          this.codeData = '';\n        } else {\n          this.codeData = newVal;\n        }\n      },\n    },\n    content: {\n      immediate: true,\n      handler(): void {\n        if (this.lineNumbers) {\n          this.$nextTick(() => {\n            this.setLineNumbersHeight();\n          });\n        }\n      },\n    },\n    lineNumbers(): void {\n      this.$nextTick(() => {\n        this.styleLineNumbers();\n        this.setLineNumbersHeight();\n      });\n    },\n  },\n  computed: {\n    isEmpty(): boolean {\n      return this.codeData.length === 0;\n    },\n    content(): string {\n      const result = this.highlight(this.codeData) + '<br />';\n      // todo: VNode support?\n      return result;\n    },\n    lineNumbersCount(): number {\n      const totalLines = this.codeData.split(/\\r\\n|\\n/).length;\n      return totalLines;\n    },\n  },\n  mounted() {\n    this._recordCurrentState();\n    this.styleLineNumbers();\n  },\n\n  methods: {\n    setLineNumbersHeight(): void {\n      this.lineNumbersHeight = getComputedStyle(this.$refs.pre as HTMLTextAreaElement).height;\n    },\n    styleLineNumbers(): void {\n      if (!this.lineNumbers || !this.autoStyleLineNumbers) return;\n\n      const $editor = this.$refs.pre as HTMLTextAreaElement;\n      const $lineNumbers: HTMLDivElement | null = this.$el.querySelector('.prism-editor__line-numbers');\n      const editorStyles = window.getComputedStyle($editor);\n\n      this.$nextTick(() => {\n        const btlr: any = 'border-top-left-radius';\n        const bblr: any = 'border-bottom-left-radius';\n        if (!$lineNumbers) return;\n        $lineNumbers.style[btlr] = editorStyles[btlr];\n        $lineNumbers.style[bblr] = editorStyles[bblr];\n        $editor.style[btlr] = '0';\n        $editor.style[bblr] = '0';\n\n        const stylesList = ['background-color', 'margin-top', 'padding-top', 'font-family', 'font-size', 'line-height'];\n        stylesList.forEach((style: any) => {\n          $lineNumbers.style[style] = editorStyles[style];\n        });\n        $lineNumbers.style['margin-bottom' as any] = '-' + editorStyles['padding-top' as any];\n      });\n    },\n    _recordCurrentState(): void {\n      const input = this.$refs.textarea as HTMLTextAreaElement;\n\n      if (!input) return;\n      // Save current state of the input\n      const { value, selectionStart, selectionEnd } = input;\n\n      this._recordChange({\n        value,\n        selectionStart,\n        selectionEnd,\n      });\n    },\n    _getLines(text: string, position: number): Array<string> {\n      return text.substring(0, position).split('\\n');\n    },\n    _applyEdits(record: Record): void {\n      // Save last selection state\n      const input = this.$refs.textarea as HTMLTextAreaElement;\n      const last = this.history.stack[this.history.offset];\n\n      if (last && input) {\n        this.history.stack[this.history.offset] = {\n          ...last,\n          selectionStart: input.selectionStart,\n          selectionEnd: input.selectionEnd,\n        };\n      }\n\n      // Save the changes\n      this._recordChange(record);\n      this._updateInput(record);\n    },\n    _recordChange(record: Record, overwrite = false): void {\n      const { stack, offset } = this.history;\n\n      if (stack.length && offset > -1) {\n        // When something updates, drop the redo operations\n        this.history.stack = stack.slice(0, offset + 1);\n\n        // Limit the number of operations to 100\n        const count = this.history.stack.length;\n\n        if (count > HISTORY_LIMIT) {\n          const extras = count - HISTORY_LIMIT;\n\n          this.history.stack = stack.slice(extras, count);\n          this.history.offset = Math.max(this.history.offset - extras, 0);\n        }\n      }\n\n      const timestamp = Date.now();\n\n      if (overwrite) {\n        const last = this.history.stack[this.history.offset];\n\n        if (last && timestamp - last.timestamp < HISTORY_TIME_GAP) {\n          // A previous entry exists and was in short interval\n\n          // Match the last word in the line\n          const re = /[^a-z0-9]([a-z0-9]+)$/i;\n\n          // Get the previous line\n          const previous = this._getLines(last.value, last.selectionStart).pop()?.match(re);\n\n          // Get the current line\n          const current = this._getLines(record.value, record.selectionStart).pop()?.match(re);\n\n          if (previous && current && current[1].startsWith(previous[1])) {\n            // The last word of the previous line and current line match\n            // Overwrite previous entry so that undo will remove whole word\n            this.history.stack[this.history.offset] = {\n              ...record,\n              timestamp,\n            };\n\n            return;\n          }\n        }\n      }\n\n      // Add the new operation to the stack\n      this.history.stack.push({ ...record, timestamp });\n      this.history.offset++;\n    },\n\n    _updateInput(record: Record): void {\n      const input = this.$refs.textarea as HTMLTextAreaElement;\n\n      if (!input) return;\n\n      // Update values and selection state\n      input.value = record.value;\n      input.selectionStart = record.selectionStart;\n      input.selectionEnd = record.selectionEnd;\n\n      this.$emit('input', record.value);\n      // this.props.onValueChange(record.value);\n    },\n    handleChange(e: KeyboardEvent): void {\n      const { value, selectionStart, selectionEnd } = e.target as HTMLTextAreaElement;\n\n      this._recordChange(\n        {\n          value,\n          selectionStart,\n          selectionEnd,\n        },\n        true\n      );\n      this.$emit('input', value);\n      // this.props.onValueChange(value);\n    },\n    _undoEdit(): void {\n      const { stack, offset } = this.history;\n\n      // Get the previous edit\n      const record = stack[offset - 1];\n\n      if (record) {\n        // Apply the changes and update the offset\n        this._updateInput(record);\n        this.history.offset = Math.max(offset - 1, 0);\n      }\n    },\n    _redoEdit(): void {\n      const { stack, offset } = this.history;\n\n      // Get the next edit\n      const record = stack[offset + 1];\n\n      if (record) {\n        // Apply the changes and update the offset\n        this._updateInput(record);\n        this.history.offset = Math.min(offset + 1, stack.length - 1);\n      }\n    },\n    handleKeyDown(e: KeyboardEvent): void {\n      // console.log(navigator.platform);\n      const { tabSize, insertSpaces, ignoreTabKey } = this;\n\n      if (this.$listeners.keydown) {\n        // onKeyDown(e);\n        this.$emit('keydown', e);\n\n        if (e.defaultPrevented) {\n          return;\n        }\n      }\n\n      if (e.keyCode === KEYCODE_ESCAPE) {\n        (<HTMLTextAreaElement>e.target).blur();\n        this.$emit('blur', e);\n      }\n\n      const { value, selectionStart, selectionEnd } = e.target as HTMLTextAreaElement;\n\n      const tabCharacter = (insertSpaces ? ' ' : '\\t').repeat(tabSize);\n\n      if (e.keyCode === KEYCODE_TAB && !ignoreTabKey && this.capture) {\n        // Prevent focus change\n        e.preventDefault();\n\n        if (e.shiftKey) {\n          // Unindent selected lines\n          const linesBeforeCaret = this._getLines(value, selectionStart);\n          const startLine = linesBeforeCaret.length - 1;\n          const endLine = this._getLines(value, selectionEnd).length - 1;\n          const nextValue = value\n            .split('\\n')\n            .map((line, i) => {\n              if (i >= startLine && i <= endLine && line.startsWith(tabCharacter)) {\n                return line.substring(tabCharacter.length);\n              }\n\n              return line;\n            })\n            .join('\\n');\n\n          if (value !== nextValue) {\n            const startLineText = linesBeforeCaret[startLine];\n\n            this._applyEdits({\n              value: nextValue,\n              // Move the start cursor if first line in selection was modified\n              // It was modified only if it started with a tab\n              selectionStart: startLineText.startsWith(tabCharacter)\n                ? selectionStart - tabCharacter.length\n                : selectionStart,\n              // Move the end cursor by total number of characters removed\n              selectionEnd: selectionEnd - (value.length - nextValue.length),\n            });\n          }\n        } else if (selectionStart !== selectionEnd) {\n          // Indent selected lines\n          const linesBeforeCaret = this._getLines(value, selectionStart);\n          const startLine = linesBeforeCaret.length - 1;\n          const endLine = this._getLines(value, selectionEnd).length - 1;\n          const startLineText = linesBeforeCaret[startLine];\n\n          this._applyEdits({\n            value: value\n              .split('\\n')\n              .map((line, i) => {\n                if (i >= startLine && i <= endLine) {\n                  return tabCharacter + line;\n                }\n\n                return line;\n              })\n              .join('\\n'),\n            // Move the start cursor by number of characters added in first line of selection\n            // Don't move it if it there was no text before cursor\n            selectionStart: /\\S/.test(startLineText) ? selectionStart + tabCharacter.length : selectionStart,\n            // Move the end cursor by total number of characters added\n            selectionEnd: selectionEnd + tabCharacter.length * (endLine - startLine + 1),\n          });\n        } else {\n          const updatedSelection = selectionStart + tabCharacter.length;\n\n          this._applyEdits({\n            // Insert tab character at caret\n            value: value.substring(0, selectionStart) + tabCharacter + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection,\n          });\n        }\n      } else if (e.keyCode === KEYCODE_BACKSPACE) {\n        const hasSelection = selectionStart !== selectionEnd;\n        const textBeforeCaret = value.substring(0, selectionStart);\n\n        if (textBeforeCaret.endsWith(tabCharacter) && !hasSelection) {\n          // Prevent default delete behaviour\n          e.preventDefault();\n\n          const updatedSelection = selectionStart - tabCharacter.length;\n\n          this._applyEdits({\n            // Remove tab character at caret\n            value: value.substring(0, selectionStart - tabCharacter.length) + value.substring(selectionEnd),\n            // Update caret position\n            selectionStart: updatedSelection,\n            selectionEnd: updatedSelection,\n          });\n        }\n      } else if (e.keyCode === KEYCODE_ENTER) {\n        // Ignore selections\n        if (selectionStart === selectionEnd) {\n          // Get the current line\n          const line = this._getLines(value, selectionStart).pop();\n          const matches = line?.match(/^\\s+/);\n\n          if (matches && matches[0]) {\n            e.preventDefault();\n\n            // Preserve indentation on inserting a new line\n            const indent = '\\n' + matches[0];\n            const updatedSelection = selectionStart + indent.length;\n\n            this._applyEdits({\n              // Insert indentation character at caret\n              value: value.substring(0, selectionStart) + indent + value.substring(selectionEnd),\n              // Update caret position\n              selectionStart: updatedSelection,\n              selectionEnd: updatedSelection,\n            });\n          }\n        }\n      } else if (\n        e.keyCode === KEYCODE_PARENS ||\n        e.keyCode === KEYCODE_BRACKETS ||\n        e.keyCode === KEYCODE_QUOTE ||\n        e.keyCode === KEYCODE_BACK_QUOTE\n      ) {\n        let chars;\n\n        if (e.keyCode === KEYCODE_PARENS && e.shiftKey) {\n          chars = ['(', ')'];\n        } else if (e.keyCode === KEYCODE_BRACKETS) {\n          if (e.shiftKey) {\n            chars = ['{', '}'];\n          } else {\n            chars = ['[', ']'];\n          }\n        } else if (e.keyCode === KEYCODE_QUOTE) {\n          if (e.shiftKey) {\n            chars = ['\"', '\"'];\n          } else {\n            chars = [\"'\", \"'\"];\n          }\n        } else if (e.keyCode === KEYCODE_BACK_QUOTE && !e.shiftKey) {\n          chars = ['`', '`'];\n        }\n\n        // console.log(isMacLike, \"navigator\" in global && /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform));\n\n        // If text is selected, wrap them in the characters\n        if (selectionStart !== selectionEnd && chars) {\n          e.preventDefault();\n\n          this._applyEdits({\n            value:\n              value.substring(0, selectionStart) +\n              chars[0] +\n              value.substring(selectionStart, selectionEnd) +\n              chars[1] +\n              value.substring(selectionEnd),\n            // Update caret position\n            selectionStart,\n            selectionEnd: selectionEnd + 2,\n          });\n        }\n      } else if (\n        (isMacLike\n          ? // Trigger undo with ⌘+Z on Mac\n            e.metaKey && e.keyCode === KEYCODE_Z\n          : // Trigger undo with Ctrl+Z on other platforms\n            e.ctrlKey && e.keyCode === KEYCODE_Z) &&\n        !e.shiftKey &&\n        !e.altKey\n      ) {\n        e.preventDefault();\n\n        this._undoEdit();\n      } else if (\n        (isMacLike\n          ? // Trigger redo with ⌘+Shift+Z on Mac\n            e.metaKey && e.keyCode === KEYCODE_Z && e.shiftKey\n          : isWindows\n          ? // Trigger redo with Ctrl+Y on Windows\n            e.ctrlKey && e.keyCode === KEYCODE_Y\n          : // Trigger redo with Ctrl+Shift+Z on other platforms\n            e.ctrlKey && e.keyCode === KEYCODE_Z && e.shiftKey) &&\n        !e.altKey\n      ) {\n        e.preventDefault();\n\n        this._redoEdit();\n      } else if (e.keyCode === KEYCODE_M && e.ctrlKey && (isMacLike ? e.shiftKey : true)) {\n        e.preventDefault();\n\n        // Toggle capturing tab key so users can focus away\n        this.capture = !this.capture;\n      }\n    },\n  },\n  render(h): VNode {\n    const lineNumberWidthCalculator = h(\n      'div',\n      {\n        attrs: {\n          class: 'prism-editor__line-width-calc',\n          style: 'height: 0px; visibility: hidden; pointer-events: none;',\n        },\n      },\n      '999'\n    );\n    const lineNumbers = h(\n      'div',\n      {\n        staticClass: 'prism-editor__line-numbers',\n        style: {\n          'min-height': this.lineNumbersHeight,\n        },\n        attrs: {\n          'aria-hidden': 'true',\n        },\n      },\n      [\n        lineNumberWidthCalculator,\n        Array.from(Array(this.lineNumbersCount).keys()).map((_, index) => {\n          return h('div', { attrs: { class: 'prism-editor__line-number token comment' } }, `${++index}`);\n        }),\n      ]\n    );\n\n    const textarea = h('textarea', {\n      ref: 'textarea',\n      on: {\n        input: this.handleChange,\n        keydown: this.handleKeyDown,\n        click: ($event: MouseEvent) => {\n          this.$emit('click', $event);\n        },\n        keyup: ($event: KeyboardEvent) => {\n          this.$emit('keyup', $event);\n        },\n        focus: ($event: FocusEvent) => {\n          this.$emit('focus', $event);\n        },\n        blur: ($event: FocusEvent) => {\n          this.$emit('blur', $event);\n        },\n      },\n      staticClass: 'prism-editor__textarea',\n      class: {\n        'prism-editor__textarea--empty': this.isEmpty,\n      },\n      attrs: {\n        spellCheck: 'false',\n        autocapitalize: 'off',\n        autocomplete: 'off',\n        autocorrect: 'off',\n        'data-gramm': 'false',\n        placeholder: this.placeholder,\n        'data-testid': 'textarea',\n        readonly: this.readonly,\n      },\n      domProps: {\n        value: this.codeData,\n      },\n    });\n    const preview = h('pre', {\n      ref: 'pre',\n      staticClass: 'prism-editor__editor',\n      attrs: {\n        'data-testid': 'preview',\n      },\n      domProps: {\n        innerHTML: this.content,\n      },\n    });\n    const editorContainer = h('div', { staticClass: 'prism-editor__container' }, [textarea, preview]);\n    return h('div', { staticClass: 'prism-editor-wrapper' }, [this.lineNumbers && lineNumbers, editorContainer]);\n  },\n});\n"],"names":["Prism","languages","clike","pattern","lookbehind","greedy","inside","_self","window","WorkerGlobalScope","self","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","o","Object","prototype","toString","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","key","hasOwnProperty","forEach","v","i","getLanguage","element","m","exec","className","toLowerCase","parentElement","setLanguage","language","RegExp","classList","add","currentScript","document","Error","err","src","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","contains","plain","plaintext","text","txt","extend","redef","insertBefore","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","toArray","all","name","push","callbacks","length","matchedStr","matchPattern","pos","lastIndex","match","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","global","flags","source","currentNode","next","tail","reach","str","removeCount","from","to","p","k","matchStr","after","removeFrom","prev","removeRange","wrapped","nestedRematch","list","node","newNode","count","array","s","e","tag","classes","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","setTimeout","module","exports","javascript","regex","markup","addInlined","addAttribute","js","KEYCODE_ENTER","KEYCODE_TAB","KEYCODE_BACKSPACE","KEYCODE_Y","KEYCODE_Z","KEYCODE_M","KEYCODE_PARENS","KEYCODE_BRACKETS","KEYCODE_QUOTE","KEYCODE_BACK_QUOTE","KEYCODE_ESCAPE","HISTORY_LIMIT","HISTORY_TIME_GAP","isWindows","navigator","test","platform","isMacLike","PrismEditor","Vue","props","lineNumbers","Boolean","default","autoStyleLineNumbers","readonly","String","Function","required","tabSize","Number","insertSpaces","ignoreTabKey","placeholder","capture","history","offset","lineNumbersHeight","codeData","watch","immediate","handler","newVal","$nextTick","_this","setLineNumbersHeight","_this2","styleLineNumbers","computed","isEmpty","result","lineNumbersCount","totalLines","split","mounted","_recordCurrentState","methods","getComputedStyle","$refs","pre","height","$editor","$lineNumbers","$el","querySelector","editorStyles","btlr","bblr","style","stylesList","input","textarea","selectionStart","selectionEnd","_recordChange","_getLines","position","substring","_applyEdits","record","last","_updateInput","overwrite","extras","Math","max","timestamp","Date","now","re","previous","pop","_this$_getLines$pop","current","_this$_getLines$pop2","startsWith","$emit","handleChange","target","_undoEdit","_redoEdit","min","handleKeyDown","$listeners","keydown","defaultPrevented","keyCode","blur","tabCharacter","repeat","preventDefault","shiftKey","linesBeforeCaret","startLine","endLine","nextValue","line","startLineText","updatedSelection","hasSelection","textBeforeCaret","endsWith","matches","indent","chars","metaKey","ctrlKey","altKey","render","h","lineNumberWidthCalculator","attrs","class","staticClass","keys","ref","on","click","$event","_this3","keyup","focus","spellCheck","autocapitalize","autocomplete","autocorrect","domProps","preview","editorContainer"],"sourceRoot":""}